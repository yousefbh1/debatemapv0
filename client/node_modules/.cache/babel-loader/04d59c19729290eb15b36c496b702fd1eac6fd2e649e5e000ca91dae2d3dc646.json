{"ast":null,"code":"var _jsxFileName = \"/home/yousefbh/projects/debatemapv0/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from 'react';\nimport ReactFlow, { Background, Controls, useNodesState, useEdgesState, addEdge, useReactFlow, Handle, Position } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomNode = ({\n  data\n}) => {\n  let style = {\n    padding: '10px',\n    border: '1px solid #777',\n    minWidth: '100px',\n    textAlign: 'center'\n  };\n\n  // Adjust styling based on node type\n  switch (data.nodeType) {\n    case 'Key Claim':\n      style = {\n        ...style,\n        backgroundColor: '#e3f2fd'\n      };\n      break;\n    case 'Supporting Argument':\n      style = {\n        ...style,\n        borderRadius: '50%',\n        backgroundColor: '#c8e6c9'\n      };\n      break;\n    case 'Evidence':\n      style = {\n        ...style,\n        clipPath: 'polygon(50% 0%, 0% 100%, 100% 100%)',\n        backgroundColor: '#fff9c4'\n      };\n      break;\n    case 'Counterargument':\n      style = {\n        ...style,\n        backgroundColor: '#ffcdd2'\n      };\n      break;\n    default:\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Left,\n      style: {\n        background: '#555'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), data.label, /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Right,\n      style: {\n        background: '#555'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomNode;\nconst nodeTypes = {\n  custom: CustomNode\n};\nconst App = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [nodeText, setNodeText] = useState('');\n  const [nodeType, setNodeType] = useState('Key Claim');\n  const [isMyTurn, setIsMyTurn] = useState(true);\n\n  // --- The important part for centering new nodes ---\n  const flowWrapperRef = useRef(null);\n  const {\n    project\n  } = useReactFlow();\n  // --------------------------------------------------\n\n  // Add a new node at the center of the user's current view\n  const addNode = useCallback(() => {\n    if (!isMyTurn) {\n      alert(\"It's not your turn!\");\n      return;\n    }\n    if (!flowWrapperRef.current) {\n      return;\n    }\n    const wrapperBounds = flowWrapperRef.current.getBoundingClientRect();\n    // Find the center point in screen coordinates\n    const centerScreenCoords = {\n      x: wrapperBounds.width / 2,\n      y: wrapperBounds.height / 2\n    };\n    // Project that point into the React Flow graph coordinate space\n    const center = project(centerScreenCoords);\n    const id = (nodes.length + 1).toString();\n    const newNode = {\n      id,\n      type: 'custom',\n      data: {\n        label: nodeText || `Node ${id}`,\n        nodeType\n      },\n      position: {\n        x: center.x,\n        y: center.y\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n    setNodeText('');\n  }, [isMyTurn, nodeText, nodeType, nodes.length, project, setNodes]);\n\n  // Toggle turn simulation\n  const endTurn = () => {\n    setIsMyTurn(prev => !prev);\n  };\n\n  // Enable drag-to-connect for edges\n  const onConnect = useCallback(connection => setEdges(eds => addEdge(connection, eds)), [setEdges]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        zIndex: 10,\n        top: 10,\n        left: 10,\n        background: '#fff',\n        padding: '10px',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Turn:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), \" \", isMyTurn ? 'Your Turn' : \"Opponent's Turn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter node text\",\n          value: nodeText,\n          onChange: e => setNodeText(e.target.value),\n          style: {\n            marginRight: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: nodeType,\n          onChange: e => setNodeType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Key Claim\",\n            children: \"Key Claim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Supporting Argument\",\n            children: \"Supporting Argument\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Evidence\",\n            children: \"Evidence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Counterargument\",\n            children: \"Counterargument\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNode,\n          disabled: !isMyTurn,\n          children: \"Add Node (Center)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: endTurn,\n          style: {\n            marginLeft: '5px'\n          },\n          children: \"End Turn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: flowWrapperRef,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        nodeTypes: nodeTypes,\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(Background, {\n          color: \"#aaa\",\n          gap: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qROG40EkXQD0uEj4XykNGNugzDc=\", false, function () {\n  return [useNodesState, useEdgesState, useReactFlow];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useRef","ReactFlow","Background","Controls","useNodesState","useEdgesState","addEdge","useReactFlow","Handle","Position","jsxDEV","_jsxDEV","CustomNode","data","style","padding","border","minWidth","textAlign","nodeType","backgroundColor","borderRadius","clipPath","children","type","position","Left","background","fileName","_jsxFileName","lineNumber","columnNumber","label","Right","_c","nodeTypes","custom","App","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","nodeText","setNodeText","setNodeType","isMyTurn","setIsMyTurn","flowWrapperRef","project","addNode","alert","current","wrapperBounds","getBoundingClientRect","centerScreenCoords","x","width","y","height","center","id","length","toString","newNode","nds","endTurn","prev","onConnect","connection","eds","zIndex","top","left","marginTop","placeholder","value","onChange","e","target","marginRight","onClick","disabled","marginLeft","ref","fitView","color","gap","_c2","$RefreshReg$"],"sources":["/home/yousefbh/projects/debatemapv0/client/src/App.tsx"],"sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport ReactFlow, {\n  Background,\n  Controls,\n  useNodesState,\n  useEdgesState,\n  Node,\n  Edge,\n  addEdge,\n  Connection,\n  useReactFlow,\n  Handle,\n  Position\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nconst CustomNode = ({ data }: { data: { label: string; nodeType: string } }) => {\n  let style: React.CSSProperties = {\n    padding: '10px',\n    border: '1px solid #777',\n    minWidth: '100px',\n    textAlign: 'center',\n  };\n\n  // Adjust styling based on node type\n  switch (data.nodeType) {\n    case 'Key Claim':\n      style = { ...style, backgroundColor: '#e3f2fd' };\n      break;\n    case 'Supporting Argument':\n      style = { ...style, borderRadius: '50%', backgroundColor: '#c8e6c9' };\n      break;\n    case 'Evidence':\n      style = {\n        ...style,\n        clipPath: 'polygon(50% 0%, 0% 100%, 100% 100%)',\n        backgroundColor: '#fff9c4',\n      };\n      break;\n    case 'Counterargument':\n      style = { ...style, backgroundColor: '#ffcdd2' };\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div style={style}>\n      {/* Add handles for edges */}\n      <Handle type=\"target\" position={Position.Left} style={{ background: '#555' }} />\n      {data.label}\n      <Handle type=\"source\" position={Position.Right} style={{ background: '#555' }} />\n    </div>\n  );\n};\n\nconst nodeTypes = { custom: CustomNode };\n\nconst App: React.FC = () => {\n  const [nodes, setNodes, onNodesChange] = useNodesState<Node[]>([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState<Edge[]>([]);\n\n  const [nodeText, setNodeText] = useState('');\n  const [nodeType, setNodeType] = useState('Key Claim');\n  const [isMyTurn, setIsMyTurn] = useState(true);\n\n  // --- The important part for centering new nodes ---\n  const flowWrapperRef = useRef<HTMLDivElement>(null);\n  const { project } = useReactFlow();\n  // --------------------------------------------------\n\n  // Add a new node at the center of the user's current view\n  const addNode = useCallback(() => {\n    if (!isMyTurn) {\n      alert(\"It's not your turn!\");\n      return;\n    }\n    if (!flowWrapperRef.current) {\n      return;\n    }\n\n    const wrapperBounds = flowWrapperRef.current.getBoundingClientRect();\n    // Find the center point in screen coordinates\n    const centerScreenCoords = {\n      x: wrapperBounds.width / 2,\n      y: wrapperBounds.height / 2,\n    };\n    // Project that point into the React Flow graph coordinate space\n    const center = project(centerScreenCoords);\n\n    const id = (nodes.length + 1).toString();\n    const newNode: Node = {\n      id,\n      type: 'custom',\n      data: { label: nodeText || `Node ${id}`, nodeType },\n      position: { x: center.x, y: center.y },\n    };\n    setNodes((nds) => [...nds, newNode]);\n    setNodeText('');\n  }, [isMyTurn, nodeText, nodeType, nodes.length, project, setNodes]);\n\n  // Toggle turn simulation\n  const endTurn = () => {\n    setIsMyTurn((prev) => !prev);\n  };\n\n  // Enable drag-to-connect for edges\n  const onConnect = useCallback(\n    (connection: Connection | Edge) => setEdges((eds) => addEdge(connection, eds)),\n    [setEdges]\n  );\n\n  return (\n    <div style={{ height: '100vh', width: '100%' }}>\n      {/* Control panel */}\n      <div\n        style={{\n          position: 'absolute',\n          zIndex: 10,\n          top: 10,\n          left: 10,\n          background: '#fff',\n          padding: '10px',\n          borderRadius: '5px',\n        }}\n      >\n        <div>\n          <strong>Turn:</strong> {isMyTurn ? 'Your Turn' : \"Opponent's Turn\"}\n        </div>\n        <div style={{ marginTop: '10px' }}>\n          <input\n            type=\"text\"\n            placeholder=\"Enter node text\"\n            value={nodeText}\n            onChange={(e) => setNodeText(e.target.value)}\n            style={{ marginRight: '5px' }}\n          />\n          <select value={nodeType} onChange={(e) => setNodeType(e.target.value)}>\n            <option value=\"Key Claim\">Key Claim</option>\n            <option value=\"Supporting Argument\">Supporting Argument</option>\n            <option value=\"Evidence\">Evidence</option>\n            <option value=\"Counterargument\">Counterargument</option>\n          </select>\n        </div>\n        <div style={{ marginTop: '10px' }}>\n          <button onClick={addNode} disabled={!isMyTurn}>\n            Add Node (Center)\n          </button>\n          <button onClick={endTurn} style={{ marginLeft: '5px' }}>\n            End Turn\n          </button>\n        </div>\n      </div>\n\n      {/* React Flow canvas with a ref for measuring center */}\n      <div ref={flowWrapperRef} style={{ height: '100%', width: '100%' }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          onConnect={onConnect}\n          nodeTypes={nodeTypes}\n          fitView\n        >\n          <Background color=\"#aaa\" gap={16} />\n          <Controls />\n        </ReactFlow>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}