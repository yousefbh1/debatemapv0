{"ast":null,"code":"import React, { memo, useRef, useEffect } from 'react';\nimport cc from 'classcat';\nimport { shallow } from 'zustand/shallow';\nimport { zoom, zoomIdentity } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { useStore, getNodePositionWithOrigin, useStoreApi, Panel, getBoundsOfRects, getNodesBounds } from '@reactflow/core';\nconst MiniMapNode = ({\n  id,\n  x,\n  y,\n  width,\n  height,\n  style,\n  color,\n  strokeColor,\n  strokeWidth,\n  className,\n  borderRadius,\n  shapeRendering,\n  onClick,\n  selected\n}) => {\n  const {\n    background,\n    backgroundColor\n  } = style || {};\n  const fill = color || background || backgroundColor;\n  return React.createElement(\"rect\", {\n    className: cc(['react-flow__minimap-node', {\n      selected\n    }, className]),\n    x: x,\n    y: y,\n    rx: borderRadius,\n    ry: borderRadius,\n    width: width,\n    height: height,\n    fill: fill,\n    stroke: strokeColor,\n    strokeWidth: strokeWidth,\n    shapeRendering: shapeRendering,\n    onClick: onClick ? event => onClick(event, id) : undefined\n  });\n};\nMiniMapNode.displayName = 'MiniMapNode';\nvar MiniMapNode$1 = memo(MiniMapNode);\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst selector$1 = s => s.nodeOrigin;\nconst selectorNodes = s => s.getNodes().filter(node => !node.hidden && node.width && node.height);\nconst getAttrFunction = func => func instanceof Function ? func : () => func;\nfunction MiniMapNodes({\n  nodeStrokeColor = 'transparent',\n  nodeColor = '#e2e2e2',\n  nodeClassName = '',\n  nodeBorderRadius = 5,\n  nodeStrokeWidth = 2,\n  // We need to rename the prop to be `CapitalCase` so that JSX will render it as\n  // a component properly.\n  nodeComponent: NodeComponent = MiniMapNode$1,\n  onClick\n}) {\n  const nodes = useStore(selectorNodes, shallow);\n  const nodeOrigin = useStore(selector$1);\n  const nodeColorFunc = getAttrFunction(nodeColor);\n  const nodeStrokeColorFunc = getAttrFunction(nodeStrokeColor);\n  const nodeClassNameFunc = getAttrFunction(nodeClassName);\n  const shapeRendering = typeof window === 'undefined' || !!window.chrome ? 'crispEdges' : 'geometricPrecision';\n  return React.createElement(React.Fragment, null, nodes.map(node => {\n    const {\n      x,\n      y\n    } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n    return React.createElement(NodeComponent, {\n      key: node.id,\n      x: x,\n      y: y,\n      width: node.width,\n      height: node.height,\n      style: node.style,\n      selected: node.selected,\n      className: nodeClassNameFunc(node),\n      color: nodeColorFunc(node),\n      borderRadius: nodeBorderRadius,\n      strokeColor: nodeStrokeColorFunc(node),\n      strokeWidth: nodeStrokeWidth,\n      shapeRendering: shapeRendering,\n      onClick: onClick,\n      id: node.id\n    });\n  }));\n}\nvar MiniMapNodes$1 = memo(MiniMapNodes);\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst defaultWidth = 200;\nconst defaultHeight = 150;\nconst selector = s => {\n  const nodes = s.getNodes();\n  const viewBB = {\n    x: -s.transform[0] / s.transform[2],\n    y: -s.transform[1] / s.transform[2],\n    width: s.width / s.transform[2],\n    height: s.height / s.transform[2]\n  };\n  return {\n    viewBB,\n    boundingRect: nodes.length > 0 ? getBoundsOfRects(getNodesBounds(nodes, s.nodeOrigin), viewBB) : viewBB,\n    rfId: s.rfId\n  };\n};\nconst ARIA_LABEL_KEY = 'react-flow__minimap-desc';\nfunction MiniMap({\n  style,\n  className,\n  nodeStrokeColor = 'transparent',\n  nodeColor = '#e2e2e2',\n  nodeClassName = '',\n  nodeBorderRadius = 5,\n  nodeStrokeWidth = 2,\n  // We need to rename the prop to be `CapitalCase` so that JSX will render it as\n  // a component properly.\n  nodeComponent,\n  maskColor = 'rgb(240, 240, 240, 0.6)',\n  maskStrokeColor = 'none',\n  maskStrokeWidth = 1,\n  position = 'bottom-right',\n  onClick,\n  onNodeClick,\n  pannable = false,\n  zoomable = false,\n  ariaLabel = 'React Flow mini map',\n  inversePan = false,\n  zoomStep = 10,\n  offsetScale = 5\n}) {\n  const store = useStoreApi();\n  const svg = useRef(null);\n  const {\n    boundingRect,\n    viewBB,\n    rfId\n  } = useStore(selector, shallow);\n  const elementWidth = style?.width ?? defaultWidth;\n  const elementHeight = style?.height ?? defaultHeight;\n  const scaledWidth = boundingRect.width / elementWidth;\n  const scaledHeight = boundingRect.height / elementHeight;\n  const viewScale = Math.max(scaledWidth, scaledHeight);\n  const viewWidth = viewScale * elementWidth;\n  const viewHeight = viewScale * elementHeight;\n  const offset = offsetScale * viewScale;\n  const x = boundingRect.x - (viewWidth - boundingRect.width) / 2 - offset;\n  const y = boundingRect.y - (viewHeight - boundingRect.height) / 2 - offset;\n  const width = viewWidth + offset * 2;\n  const height = viewHeight + offset * 2;\n  const labelledBy = `${ARIA_LABEL_KEY}-${rfId}`;\n  const viewScaleRef = useRef(0);\n  viewScaleRef.current = viewScale;\n  useEffect(() => {\n    if (svg.current) {\n      const selection = select(svg.current);\n      const zoomHandler = event => {\n        const {\n          transform,\n          d3Selection,\n          d3Zoom\n        } = store.getState();\n        if (event.sourceEvent.type !== 'wheel' || !d3Selection || !d3Zoom) {\n          return;\n        }\n        const pinchDelta = -event.sourceEvent.deltaY * (event.sourceEvent.deltaMode === 1 ? 0.05 : event.sourceEvent.deltaMode ? 1 : 0.002) * zoomStep;\n        const zoom = transform[2] * Math.pow(2, pinchDelta);\n        d3Zoom.scaleTo(d3Selection, zoom);\n      };\n      const panHandler = event => {\n        const {\n          transform,\n          d3Selection,\n          d3Zoom,\n          translateExtent,\n          width,\n          height\n        } = store.getState();\n        if (event.sourceEvent.type !== 'mousemove' || !d3Selection || !d3Zoom) {\n          return;\n        }\n        // @TODO: how to calculate the correct next position? Math.max(1, transform[2]) is a workaround.\n        const moveScale = viewScaleRef.current * Math.max(1, transform[2]) * (inversePan ? -1 : 1);\n        const position = {\n          x: transform[0] - event.sourceEvent.movementX * moveScale,\n          y: transform[1] - event.sourceEvent.movementY * moveScale\n        };\n        const extent = [[0, 0], [width, height]];\n        const nextTransform = zoomIdentity.translate(position.x, position.y).scale(transform[2]);\n        const constrainedTransform = d3Zoom.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n      };\n      const zoomAndPanHandler = zoom()\n      // @ts-ignore\n      .on('zoom', pannable ? panHandler : null)\n      // @ts-ignore\n      .on('zoom.wheel', zoomable ? zoomHandler : null);\n      selection.call(zoomAndPanHandler);\n      return () => {\n        selection.on('zoom', null);\n      };\n    }\n  }, [pannable, zoomable, inversePan, zoomStep]);\n  const onSvgClick = onClick ? event => {\n    const rfCoord = pointer(event);\n    onClick(event, {\n      x: rfCoord[0],\n      y: rfCoord[1]\n    });\n  } : undefined;\n  const onSvgNodeClick = onNodeClick ? (event, nodeId) => {\n    const node = store.getState().nodeInternals.get(nodeId);\n    onNodeClick(event, node);\n  } : undefined;\n  return React.createElement(Panel, {\n    position: position,\n    style: style,\n    className: cc(['react-flow__minimap', className]),\n    \"data-testid\": \"rf__minimap\"\n  }, React.createElement(\"svg\", {\n    width: elementWidth,\n    height: elementHeight,\n    viewBox: `${x} ${y} ${width} ${height}`,\n    role: \"img\",\n    \"aria-labelledby\": labelledBy,\n    ref: svg,\n    onClick: onSvgClick\n  }, ariaLabel && React.createElement(\"title\", {\n    id: labelledBy\n  }, ariaLabel), React.createElement(MiniMapNodes$1, {\n    onClick: onSvgNodeClick,\n    nodeColor: nodeColor,\n    nodeStrokeColor: nodeStrokeColor,\n    nodeBorderRadius: nodeBorderRadius,\n    nodeClassName: nodeClassName,\n    nodeStrokeWidth: nodeStrokeWidth,\n    nodeComponent: nodeComponent\n  }), React.createElement(\"path\", {\n    className: \"react-flow__minimap-mask\",\n    d: `M${x - offset},${y - offset}h${width + offset * 2}v${height + offset * 2}h${-width - offset * 2}z\n        M${viewBB.x},${viewBB.y}h${viewBB.width}v${viewBB.height}h${-viewBB.width}z`,\n    fill: maskColor,\n    fillRule: \"evenodd\",\n    stroke: maskStrokeColor,\n    strokeWidth: maskStrokeWidth,\n    pointerEvents: \"none\"\n  })));\n}\nMiniMap.displayName = 'MiniMap';\nvar MiniMap$1 = memo(MiniMap);\nexport { MiniMap$1 as MiniMap };","map":{"version":3,"names":["React","memo","useRef","useEffect","cc","shallow","zoom","zoomIdentity","select","pointer","useStore","getNodePositionWithOrigin","useStoreApi","Panel","getBoundsOfRects","getNodesBounds","MiniMapNode","id","x","y","width","height","style","color","strokeColor","strokeWidth","className","borderRadius","shapeRendering","onClick","selected","background","backgroundColor","fill","createElement","rx","ry","stroke","event","undefined","displayName","MiniMapNode$1","selector$1","s","nodeOrigin","selectorNodes","getNodes","filter","node","hidden","getAttrFunction","func","Function","MiniMapNodes","nodeStrokeColor","nodeColor","nodeClassName","nodeBorderRadius","nodeStrokeWidth","nodeComponent","NodeComponent","nodes","nodeColorFunc","nodeStrokeColorFunc","nodeClassNameFunc","window","chrome","Fragment","map","positionAbsolute","key","MiniMapNodes$1","defaultWidth","defaultHeight","selector","viewBB","transform","boundingRect","length","rfId","ARIA_LABEL_KEY","MiniMap","maskColor","maskStrokeColor","maskStrokeWidth","position","onNodeClick","pannable","zoomable","ariaLabel","inversePan","zoomStep","offsetScale","store","svg","elementWidth","elementHeight","scaledWidth","scaledHeight","viewScale","Math","max","viewWidth","viewHeight","offset","labelledBy","viewScaleRef","current","selection","zoomHandler","d3Selection","d3Zoom","getState","sourceEvent","type","pinchDelta","deltaY","deltaMode","pow","scaleTo","panHandler","translateExtent","moveScale","movementX","movementY","extent","nextTransform","translate","scale","constrainedTransform","constrain","zoomAndPanHandler","on","call","onSvgClick","rfCoord","onSvgNodeClick","nodeId","nodeInternals","get","viewBox","role","ref","d","fillRule","pointerEvents","MiniMap$1"],"sources":["/home/yousefbh/projects/debatemapv0/client/node_modules/@reactflow/minimap/dist/esm/index.mjs"],"sourcesContent":["import React, { memo, useRef, useEffect } from 'react';\nimport cc from 'classcat';\nimport { shallow } from 'zustand/shallow';\nimport { zoom, zoomIdentity } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { useStore, getNodePositionWithOrigin, useStoreApi, Panel, getBoundsOfRects, getNodesBounds } from '@reactflow/core';\n\nconst MiniMapNode = ({ id, x, y, width, height, style, color, strokeColor, strokeWidth, className, borderRadius, shapeRendering, onClick, selected, }) => {\n    const { background, backgroundColor } = style || {};\n    const fill = (color || background || backgroundColor);\n    return (React.createElement(\"rect\", { className: cc(['react-flow__minimap-node', { selected }, className]), x: x, y: y, rx: borderRadius, ry: borderRadius, width: width, height: height, fill: fill, stroke: strokeColor, strokeWidth: strokeWidth, shapeRendering: shapeRendering, onClick: onClick ? (event) => onClick(event, id) : undefined }));\n};\nMiniMapNode.displayName = 'MiniMapNode';\nvar MiniMapNode$1 = memo(MiniMapNode);\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst selector$1 = (s) => s.nodeOrigin;\nconst selectorNodes = (s) => s.getNodes().filter((node) => !node.hidden && node.width && node.height);\nconst getAttrFunction = (func) => (func instanceof Function ? func : () => func);\nfunction MiniMapNodes({ nodeStrokeColor = 'transparent', nodeColor = '#e2e2e2', nodeClassName = '', nodeBorderRadius = 5, nodeStrokeWidth = 2, \n// We need to rename the prop to be `CapitalCase` so that JSX will render it as\n// a component properly.\nnodeComponent: NodeComponent = MiniMapNode$1, onClick, }) {\n    const nodes = useStore(selectorNodes, shallow);\n    const nodeOrigin = useStore(selector$1);\n    const nodeColorFunc = getAttrFunction(nodeColor);\n    const nodeStrokeColorFunc = getAttrFunction(nodeStrokeColor);\n    const nodeClassNameFunc = getAttrFunction(nodeClassName);\n    const shapeRendering = typeof window === 'undefined' || !!window.chrome ? 'crispEdges' : 'geometricPrecision';\n    return (React.createElement(React.Fragment, null, nodes.map((node) => {\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n        return (React.createElement(NodeComponent, { key: node.id, x: x, y: y, width: node.width, height: node.height, style: node.style, selected: node.selected, className: nodeClassNameFunc(node), color: nodeColorFunc(node), borderRadius: nodeBorderRadius, strokeColor: nodeStrokeColorFunc(node), strokeWidth: nodeStrokeWidth, shapeRendering: shapeRendering, onClick: onClick, id: node.id }));\n    })));\n}\nvar MiniMapNodes$1 = memo(MiniMapNodes);\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst defaultWidth = 200;\nconst defaultHeight = 150;\nconst selector = (s) => {\n    const nodes = s.getNodes();\n    const viewBB = {\n        x: -s.transform[0] / s.transform[2],\n        y: -s.transform[1] / s.transform[2],\n        width: s.width / s.transform[2],\n        height: s.height / s.transform[2],\n    };\n    return {\n        viewBB,\n        boundingRect: nodes.length > 0 ? getBoundsOfRects(getNodesBounds(nodes, s.nodeOrigin), viewBB) : viewBB,\n        rfId: s.rfId,\n    };\n};\nconst ARIA_LABEL_KEY = 'react-flow__minimap-desc';\nfunction MiniMap({ style, className, nodeStrokeColor = 'transparent', nodeColor = '#e2e2e2', nodeClassName = '', nodeBorderRadius = 5, nodeStrokeWidth = 2, \n// We need to rename the prop to be `CapitalCase` so that JSX will render it as\n// a component properly.\nnodeComponent, maskColor = 'rgb(240, 240, 240, 0.6)', maskStrokeColor = 'none', maskStrokeWidth = 1, position = 'bottom-right', onClick, onNodeClick, pannable = false, zoomable = false, ariaLabel = 'React Flow mini map', inversePan = false, zoomStep = 10, offsetScale = 5, }) {\n    const store = useStoreApi();\n    const svg = useRef(null);\n    const { boundingRect, viewBB, rfId } = useStore(selector, shallow);\n    const elementWidth = style?.width ?? defaultWidth;\n    const elementHeight = style?.height ?? defaultHeight;\n    const scaledWidth = boundingRect.width / elementWidth;\n    const scaledHeight = boundingRect.height / elementHeight;\n    const viewScale = Math.max(scaledWidth, scaledHeight);\n    const viewWidth = viewScale * elementWidth;\n    const viewHeight = viewScale * elementHeight;\n    const offset = offsetScale * viewScale;\n    const x = boundingRect.x - (viewWidth - boundingRect.width) / 2 - offset;\n    const y = boundingRect.y - (viewHeight - boundingRect.height) / 2 - offset;\n    const width = viewWidth + offset * 2;\n    const height = viewHeight + offset * 2;\n    const labelledBy = `${ARIA_LABEL_KEY}-${rfId}`;\n    const viewScaleRef = useRef(0);\n    viewScaleRef.current = viewScale;\n    useEffect(() => {\n        if (svg.current) {\n            const selection = select(svg.current);\n            const zoomHandler = (event) => {\n                const { transform, d3Selection, d3Zoom } = store.getState();\n                if (event.sourceEvent.type !== 'wheel' || !d3Selection || !d3Zoom) {\n                    return;\n                }\n                const pinchDelta = -event.sourceEvent.deltaY *\n                    (event.sourceEvent.deltaMode === 1 ? 0.05 : event.sourceEvent.deltaMode ? 1 : 0.002) *\n                    zoomStep;\n                const zoom = transform[2] * Math.pow(2, pinchDelta);\n                d3Zoom.scaleTo(d3Selection, zoom);\n            };\n            const panHandler = (event) => {\n                const { transform, d3Selection, d3Zoom, translateExtent, width, height } = store.getState();\n                if (event.sourceEvent.type !== 'mousemove' || !d3Selection || !d3Zoom) {\n                    return;\n                }\n                // @TODO: how to calculate the correct next position? Math.max(1, transform[2]) is a workaround.\n                const moveScale = viewScaleRef.current * Math.max(1, transform[2]) * (inversePan ? -1 : 1);\n                const position = {\n                    x: transform[0] - event.sourceEvent.movementX * moveScale,\n                    y: transform[1] - event.sourceEvent.movementY * moveScale,\n                };\n                const extent = [\n                    [0, 0],\n                    [width, height],\n                ];\n                const nextTransform = zoomIdentity.translate(position.x, position.y).scale(transform[2]);\n                const constrainedTransform = d3Zoom.constrain()(nextTransform, extent, translateExtent);\n                d3Zoom.transform(d3Selection, constrainedTransform);\n            };\n            const zoomAndPanHandler = zoom()\n                // @ts-ignore\n                .on('zoom', pannable ? panHandler : null)\n                // @ts-ignore\n                .on('zoom.wheel', zoomable ? zoomHandler : null);\n            selection.call(zoomAndPanHandler);\n            return () => {\n                selection.on('zoom', null);\n            };\n        }\n    }, [pannable, zoomable, inversePan, zoomStep]);\n    const onSvgClick = onClick\n        ? (event) => {\n            const rfCoord = pointer(event);\n            onClick(event, { x: rfCoord[0], y: rfCoord[1] });\n        }\n        : undefined;\n    const onSvgNodeClick = onNodeClick\n        ? (event, nodeId) => {\n            const node = store.getState().nodeInternals.get(nodeId);\n            onNodeClick(event, node);\n        }\n        : undefined;\n    return (React.createElement(Panel, { position: position, style: style, className: cc(['react-flow__minimap', className]), \"data-testid\": \"rf__minimap\" },\n        React.createElement(\"svg\", { width: elementWidth, height: elementHeight, viewBox: `${x} ${y} ${width} ${height}`, role: \"img\", \"aria-labelledby\": labelledBy, ref: svg, onClick: onSvgClick },\n            ariaLabel && React.createElement(\"title\", { id: labelledBy }, ariaLabel),\n            React.createElement(MiniMapNodes$1, { onClick: onSvgNodeClick, nodeColor: nodeColor, nodeStrokeColor: nodeStrokeColor, nodeBorderRadius: nodeBorderRadius, nodeClassName: nodeClassName, nodeStrokeWidth: nodeStrokeWidth, nodeComponent: nodeComponent }),\n            React.createElement(\"path\", { className: \"react-flow__minimap-mask\", d: `M${x - offset},${y - offset}h${width + offset * 2}v${height + offset * 2}h${-width - offset * 2}z\n        M${viewBB.x},${viewBB.y}h${viewBB.width}v${viewBB.height}h${-viewBB.width}z`, fill: maskColor, fillRule: \"evenodd\", stroke: maskStrokeColor, strokeWidth: maskStrokeWidth, pointerEvents: \"none\" }))));\n}\nMiniMap.displayName = 'MiniMap';\nvar MiniMap$1 = memo(MiniMap);\n\nexport { MiniMap$1 as MiniMap };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}