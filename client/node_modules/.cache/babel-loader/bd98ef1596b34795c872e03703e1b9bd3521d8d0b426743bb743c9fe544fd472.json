{"ast":null,"code":"var _jsxFileName = \"/home/yousefbh/projects/debatemapv0/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactFlow, { ReactFlowProvider, Controls } from 'reactflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [ws, setWs] = useState(null);\n  const [session, setSession] = useState(null);\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [turn, setTurn] = useState(null);\n  const [userId] = useState(() => 'user-' + Math.floor(Math.random() * 10000)); // just random for MVP\n\n  // Connect to WebSocket server\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:4000');\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n    };\n    socket.onmessage = msg => {\n      const data = JSON.parse(msg.data);\n      handleServerMessage(data);\n    };\n    setWs(socket);\n    return () => {\n      socket.close();\n    };\n  }, []);\n  function handleServerMessage(data) {\n    switch (data.type) {\n      case 'SESSION_CREATED':\n        {\n          setSession(data.payload);\n          setTurn(data.payload.turn);\n          break;\n        }\n      case 'SESSION_JOINED':\n        {\n          setSession(data.payload.session);\n          setTurn(data.payload.session.turn);\n          // transform the server's \"nodes\" into React Flow nodes if needed\n          // or store them in a separate state\n          break;\n        }\n      case 'NODE_ADDED':\n        {\n          // data.payload is the new node from the server\n          // Convert it to a React Flow node structure\n          const newReactFlowNode = {\n            id: data.payload.id,\n            data: {\n              label: data.payload.text\n            },\n            position: {\n              x: data.payload.x,\n              y: data.payload.y\n            }\n          };\n          setNodes(prev => [...prev, newReactFlowNode]);\n          break;\n        }\n      case 'TURN_CHANGED':\n        {\n          setTurn(data.payload);\n          break;\n        }\n      default:\n        break;\n    }\n  }\n  function createSession() {\n    if (!ws) return;\n    ws.send(JSON.stringify({\n      type: 'CREATE_SESSION',\n      payload: {\n        userId\n      }\n    }));\n  }\n  function joinSession(sessionId) {\n    if (!ws) return;\n    ws.send(JSON.stringify({\n      type: 'JOIN_SESSION',\n      payload: {\n        sessionId,\n        userId\n      }\n    }));\n  }\n  function addNode() {\n    if (!ws || !session) return;\n    // For MVP, let's place a new node at random coordinates\n    const newNode = {\n      author: userId === session.creator ? 'creator' : 'opponent',\n      sessionId: session.id,\n      x: Math.random() * 300,\n      y: Math.random() * 300,\n      text: 'New Node!',\n      shape: 'Rectangle'\n    };\n    ws.send(JSON.stringify({\n      type: 'ADD_NODE',\n      payload: {\n        sessionId: session.id,\n        node: newNode\n      }\n    }));\n  }\n  function endTurn() {\n    if (!ws || !session) return;\n    ws.send(JSON.stringify({\n      type: 'END_TURN',\n      payload: {\n        sessionId: session.id\n      }\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    children: [!session && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createSession,\n        children: \"Create Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => joinSession(prompt('Enter Session ID') || ''),\n        children: \"Join Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), session && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Session ID: \", session.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Turn: \", turn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNode,\n        disabled: turn === 'creator' && userId !== session.creator || turn === 'opponent' && userId === session.creator,\n        children: \"Add Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: endTurn,\n        children: \"End Turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onEdgesChange: newEdges => setEdges(newEdges),\n        onNodesChange: newNodes => setNodes(newNodes),\n        children: /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CBppf4c1sFzUbTbt0iGAlOMtEus=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactFlow","ReactFlowProvider","Controls","jsxDEV","_jsxDEV","App","_s","ws","setWs","session","setSession","nodes","setNodes","edges","setEdges","turn","setTurn","userId","Math","floor","random","socket","WebSocket","onopen","console","log","onmessage","msg","data","JSON","parse","handleServerMessage","close","type","payload","newReactFlowNode","id","label","text","position","x","y","prev","createSession","send","stringify","joinSession","sessionId","addNode","newNode","author","creator","shape","node","endTurn","style","width","height","children","padding","onClick","fileName","_jsxFileName","lineNumber","columnNumber","prompt","disabled","onEdgesChange","newEdges","onNodesChange","newNodes","_c","$RefreshReg$"],"sources":["/home/yousefbh/projects/debatemapv0/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactFlow, { \n  ReactFlowProvider, \n  addEdge, \n  Controls, \n  Node, \n  Edge \n} from 'reactflow';\n\nconst App: React.FC = () => {\n  const [ws, setWs] = useState<WebSocket | null>(null);\n  const [session, setSession] = useState<any>(null);\n  const [nodes, setNodes] = useState<Node[]>([]);\n  const [edges, setEdges] = useState<Edge[]>([]);\n  const [turn, setTurn] = useState<'creator' | 'opponent' | null>(null);\n  const [userId] = useState(() => 'user-' + Math.floor(Math.random() * 10000)); // just random for MVP\n\n  // Connect to WebSocket server\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:4000');\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n    };\n    socket.onmessage = (msg) => {\n      const data = JSON.parse(msg.data);\n      handleServerMessage(data);\n    };\n    setWs(socket);\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  function handleServerMessage(data: any) {\n    switch (data.type) {\n      case 'SESSION_CREATED': {\n        setSession(data.payload);\n        setTurn(data.payload.turn);\n        break;\n      }\n      case 'SESSION_JOINED': {\n        setSession(data.payload.session);\n        setTurn(data.payload.session.turn);\n        // transform the server's \"nodes\" into React Flow nodes if needed\n        // or store them in a separate state\n        break;\n      }\n      case 'NODE_ADDED': {\n        // data.payload is the new node from the server\n        // Convert it to a React Flow node structure\n        const newReactFlowNode: Node = {\n          id: data.payload.id,\n          data: { label: data.payload.text },\n          position: { x: data.payload.x, y: data.payload.y }\n        };\n        setNodes((prev) => [...prev, newReactFlowNode]);\n        break;\n      }\n      case 'TURN_CHANGED': {\n        setTurn(data.payload);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  function createSession() {\n    if (!ws) return;\n    ws.send(JSON.stringify({\n      type: 'CREATE_SESSION',\n      payload: { userId }\n    }));\n  }\n\n  function joinSession(sessionId: string) {\n    if (!ws) return;\n    ws.send(JSON.stringify({\n      type: 'JOIN_SESSION',\n      payload: { sessionId, userId }\n    }));\n  }\n\n  function addNode() {\n    if (!ws || !session) return;\n    // For MVP, let's place a new node at random coordinates\n    const newNode = {\n      author: userId === session.creator ? 'creator' : 'opponent',\n      sessionId: session.id,\n      x: Math.random() * 300,\n      y: Math.random() * 300,\n      text: 'New Node!',\n      shape: 'Rectangle'\n    };\n    ws.send(JSON.stringify({\n      type: 'ADD_NODE',\n      payload: { sessionId: session.id, node: newNode }\n    }));\n  }\n\n  function endTurn() {\n    if (!ws || !session) return;\n    ws.send(JSON.stringify({\n      type: 'END_TURN',\n      payload: { sessionId: session.id }\n    }));\n  }\n\n  return (\n    <div style={{ width: '100vw', height: '100vh' }}>\n      {!session && (\n        <div style={{ padding: 10 }}>\n          <button onClick={createSession}>Create Session</button>\n          <button onClick={() => joinSession(prompt('Enter Session ID') || '')}>\n            Join Session\n          </button>\n        </div>\n      )}\n      {session && (\n        <div style={{ padding: 10 }}>\n          <p>Session ID: {session.id}</p>\n          <p>Current Turn: {turn}</p>\n          <button onClick={addNode} disabled={(turn === 'creator' && userId !== session.creator) || (turn === 'opponent' && userId === session.creator)}>\n            Add Node\n          </button>\n          <button onClick={endTurn}>End Turn</button>\n        </div>\n      )}\n      <ReactFlowProvider>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onEdgesChange={(newEdges) => setEdges(newEdges)}\n          onNodesChange={(newNodes) => setNodes(newNodes)}\n        >\n          <Controls />\n        </ReactFlow>\n      </ReactFlowProvider>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}